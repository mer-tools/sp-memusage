.TH MEM-CPU-MONITOR 1 "2009-06-22" "sp-memusage"
.SH NAME
mem-cpu-monitor - output system and process memory and cpu usage at given intervals
.SH SYNOPSIS
mem-cpu-monitor [[\fIPID\fP] [\fIPID...\fP]]
.SH DESCRIPTION
\fImem-cpu-monitor\fP outputs (one-liner) system and process memory, CPU
usage and frequency information at intervals defined by \fI-i\fP option 
(three seconds by default).

The processes to be monitored are specified by their process ID
numbers (PIDs). Any number of PIDs may be specified. For processes
their clean, dirty memory, dirty memory change and CPU usage is monitored.

Monitoring is continued until explicitly interrupted, for example by issuing
SIGTERM via Ctrl-C.

.SH OPTIONS
.TP 24
-p, --pid=\fIPID\fP
Monitor process specified by \fIPID\fP. If there are no processes with the
specified \fIPID\fP it is automatically removed from the monitored process
list.
.TP 24
-n, --name=\fINAME\fP
Monitor processes which name starts with \fINAME\fP.
This option can significantly increase the mem-cpu-monitor overhead
and therefore is not recommended for usage with small (sub second) update
intervals. Note that the real new process detection resolution is one second
anyway.
-N, --name-created=\fINAME\fP
This option works in the same way as --name option, with exception that
only the names processes are created with are checked. This results 
in about half CPU usage as --name option, but prevents mem-cpu-monitor
from detecting processes that changes name (binary) midway.
.TP 24
-x, --exec=\fICMD\fP
Execute command line \fICMD\fP and start monitoring the created process.
\fICMD\fP can contain the application name and command line parameters - in
this case it should be enclosed with quotes. For example: --exec="ls /home"
.TP 24
-f, --file=\fIFILE\fP
Redirect output to \fIFILE\fP.
.TP 24
    --no-colors
Never use colors. See section \fBTERMINAL TWEAKS\fP for more details.
.TP 24
    --self
Adds this instance of \fImem-cpu-monitor\fP to the list of monitored processes.
.TP 24
-i, --interval=\fIINTERVAL\fP
Data acquisition interval in seconds (decimal values are accepted).
.TP 24
-C, --system-cpu-change=\fITHRESHOLD\fP
Perform output only when the system cpu usage is greater then the specified 
\fITHRESHOLD\fP.
.TP 24
-M, --system-mem-change=\fITHRESHOLD\fP
Perform output only when the system memory change is greater then the specified 
\fITHRESHOLD\fP.
.TP 24
-c, --cpu-change=\fITHRESHOLD\fP
Perform output only when the monitored process cpu usage is greater then the specified 
\fITHRESHOLD\fP.
.TP 24
-m, --mem-change=\fITHRESHOLD\fP
Perform output only when the monitored process memory change is greater then the specified 
\fITHRESHOLD\fP.
.TP 24
-G \fICGROUP\fP, --cgroup=[\fICGROUP\fP]
Monitors memory.memsw.usage_in_bytes for the specified \fICGROUP\fP (e.g. applications). To
monitor root use empty cgroup name '' or syspart. It's possible to specify multiple
cgroups to monitor by using --cgroup (-G) multiple times.
.TP 24
-h, --help
Display a brief help message.

.SH TERMINAL TWEAKS
\fImem-cpu-monitor\fP contains a few tweaks for terminal users, that are
activated only when a terminal is detected (\fBisatty\fP(3) returns 1 for the
output file descriptor):
.IP \[bu]
Alternating process columns are highlighted by changing the foreground color.
.IP \[bu]
The headers are reprinted after printing screenful of updates.

.SH ARCHITECTURE SPECIFIC NOTES
\fImem-cpu-monitor\fP supports monitoring of so called memory watermarks
exposed in \fBsysfs\fP by the kernel. An additional column titled \fBBL\fP will
be displayed in this case, that will display \fBB\fP and \fBL\fP, when the low
and high watermarks have been respectively reached, and \fB--\fP otherwise.

.SH EXAMPLE INVOCATIONS
.TP
$ mem-cpu-monitor
Starts monitoring system memory and CPU usage. Report is given at the default
interval of three seconds.
.TP
$ mem-cpu-monitor 2 $(pidof bash)
Starts monitoring the memory and CPU usage of the system and all bash shells.
Report is given every two seconds.
.TP
$ mem-cpu-monitor -p 1234 -p 5678
Starts monitoring the memory and CPU usage of the system and the processes
identified with IDs 1234 and 5678. Report is given at the default interval of
three seconds.

.SH EXAMPLE OUTPUT
.nf
$ mem-cpu-monitor -i 1
System total memory: 2074040 kB RAM, 2650684 kB swap
           _______________  ____________
________  / system memory \\/ system CPU \\
time:   \\/  used:  change:     %:   MHz:
11:35:42    473828       +0   0.00   800
11:35:43    473868      +40   3.94   800
11:35:44    473868       +0   4.74  1600
11:35:45    473876       +8   2.45  1400
11:35:46    473876       +0   3.38   800
.fi

.nf
$ mem-cpu-monitor -p $(pidof gvim)
System total memory: 2074040 kB RAM, 2650684 kB swap
PID  3086: gvim mem-cpu-monitor.1
           _______________  ____________  _____________________________
________  / system memory \\/ system CPU \\/PID 3086  gvim mem-cpu-mon...\\
time:   \\/  used:  change:      %:  MHz:  clean:  dirty: change: CPU-%:
12:04:43    474988       +0   0.00  800    1564    3292      +0   0.00
12:04:46    475264     +276   3.72  800    1564    3292      +0   0.00
12:04:49    475296      +32   3.06  800    1564    3292      +0   0.00
12:04:52    475784     +488   3.88  800    1564    3292      +0   0.00
.fi

.nf
$ mem-cpu-monitor
System total memory: 246744 kB RAM, 0 kB swap
              _______________  ____________
_______  __  / system memory \\/ system CPU \\
time:  \\/BL\\/  used:  change:     %:   MHz:
08:07:11 --   137264       +0   0.00   800
08:07:14 --   137272       +8  15.13   800
08:07:17 --   137264       -8   0.33   800
08:07:20 B-   188452   +51188  21.19   800
08:07:23 B-   188452       +0   1.67   800
08:07:26 B-   195996    +7544  55.45   800
08:07:30 BL   233568   +37572 100.00   800
08:07:33 BL   226032    -7536  81.73   800
08:07:36 BL   221484    -4548  83.77   800
08:07:39 --   119880  -101604 100.00   800
08:07:42 --   126560    +6680 100.00   800
.fi

.SH FILES
\fI/proc/meminfo\fP,
\fI/proc/stat\fP,
\fI/proc/pid/cmdline\fP,
\fI/proc/pid/smaps\fP,
\fI/proc/pid/stat\fP,
\fI/proc/pid/status\fP,
\fI/sys/kernel/low_watermark\fP,
\fI/sys/kernel/high_watermark\fP

.SH SEE ALSO
.IR proc (5), 
.IR memusage (1),
.IR isatty (3)
.SH COPYRIGHT
Copyright (C) 2005-2009 Nokia Corporation.
.PP
This is free software.  You may redistribute copies of it under the
terms of the GNU General Public License v2 included with the software.
There is NO WARRANTY, to the extent permitted by law.
