# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.22
# 
# >> macros
# << macros

Name:       sp-memusage
Summary:    Memory usage reporting tools
Version:    1.3.2
Release:    1
Group:      Development/Tools
License:    LGPLv2+
URL:        git://gitorious.org/maemo-tools/sp-memusage.git
Source0:    %{name}-%{version}.tar.gz
Source100:  sp-memusage.yaml
Requires(post): /sbin/ldconfig
Requires(postun): /sbin/ldconfig
BuildRequires:  libsp-measure-devel


%description
This package provides a collection of memory usage monitoring tools and scripts.
  - Mallinfo library outputs values from the Glibc mallinfo() function, either
    with SIGUSR1 like libleaks, or at given intervals. I.e. it tells how much
    allocated and freed (but not returned to system) memory is in the C-library
    memory pool for the process.  You can use this to detect memory
    fragmentation.
  - mem-*monitor* tools output system and process memory (and CPU) usage
    overviews at specified intervals.
  - There are also some extra scripts to get memory usage details from
    processes.
 Manual pages tell more about the tools and scripts.



%package tests
Summary:    sp-memusage tests
Group:      Development/Tools
Requires:   %{name} = %{version}-%{release}

%description tests
CI tests for sp-memusage


%prep
%setup -q -n src

# >> setup
# << setup

%build
# >> build pre
# << build pre


make %{?jobs:-j%jobs}

# >> build post
# << build post
%install
rm -rf %{buildroot}
# >> install pre
# << install pre
%make_install

# >> install post

# << install post



%post -p /sbin/ldconfig

%postun -p /sbin/ldconfig





%files
%defattr(-,root,root,-)
# >> files
%{_libdir}/mallinfo.so*
%{_bindir}/mem-monitor
%{_bindir}/mem-cpu-monitor
%{_bindir}/mem-monitor-smaps
%{_bindir}/mem-smaps-*
%{_bindir}/mem-dirty-code-pages
%{_bindir}/run-with-mallinfo
%{_bindir}/run-with-memusage
%{_bindir}/mem-cpu-plot
%{_mandir}/man1/*
%doc COPYING README
# << files


%files tests
%defattr(-,root,root,-)
# >> files tests
%{_datadir}/%{name}-tests/*
# << files tests

